/*! tailwindcss v2.2.4 | MIT License | https://tailwindcss.com */

/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

/*
Document
========
*/

/**
Use a better box model (opinionated).
*/

*,
::before,
::after {
  box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

html {
  -moz-tab-size: 4;
  -o-tab-size: 4;
     tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

body {
  margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

body {
  font-family:
		system-ui,
		-apple-system, /* Firefox supports this but not yet `system-ui` */
		'Segoe UI',
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		'Apple Color Emoji',
		'Segoe UI Emoji';
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
}

/*
Text-level semantics
====================
*/

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr[title] {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family:
		ui-monospace,
		SFMono-Regular,
		Consolas,
		'Liberation Mono',
		Menlo,
		monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
}

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

button,
select {
  /* 1 */
  text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/

::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
Restore the focus styles unset by the previous rule.
*/

:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

legend {
  padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

button {
  background-color: transparent;
  background-image: none;
}

fieldset {
  margin: 0;
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

html {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 1 */
  line-height: 1.5;
  /* 2 */
}

/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */

body {
  font-family: inherit;
  line-height: inherit;
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

hr {
  border-top-width: 1px;
}

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

img {
  border-style: solid;
}

textarea {
  resize: vertical;
}

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  color: #9ca3af;
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  color: #9ca3af;
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}

button,
[role="button"] {
  cursor: pointer;
}

table {
  border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

a {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

/**
 * 1. Make replaced elements `display: block` by default as that's
 *    the behavior you want almost all of the time. Inspired by
 *    CSS Remedy, with `svg` added as well.
 *
 *    https://github.com/mozdevs/cssremedy/issues/14
 * 
 * 2. Add `vertical-align: middle` to align replaced elements more
 *    sensibly by default when overriding `display` by adding a
 *    utility like `inline`.
 *
 *    This can trigger a poorly considered linting error in some
 *    tools but is included by design.
 * 
 *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210
 */

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/**
 * Constrain images and videos to the parent width and preserve
 * their intrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
video {
  max-width: 100%;
  height: auto;
}

*, ::before, ::after {
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-border-opacity: 1;
  border-color: rgba(229, 231, 235, var(--tw-border-opacity));
  --tw-shadow: 0 0 #0000;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(59, 130, 246, 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-blur: var(--tw-empty,/*!*/ /*!*/);
  --tw-brightness: var(--tw-empty,/*!*/ /*!*/);
  --tw-contrast: var(--tw-empty,/*!*/ /*!*/);
  --tw-grayscale: var(--tw-empty,/*!*/ /*!*/);
  --tw-hue-rotate: var(--tw-empty,/*!*/ /*!*/);
  --tw-invert: var(--tw-empty,/*!*/ /*!*/);
  --tw-saturate: var(--tw-empty,/*!*/ /*!*/);
  --tw-sepia: var(--tw-empty,/*!*/ /*!*/);
  --tw-drop-shadow: var(--tw-empty,/*!*/ /*!*/);
  --tw-filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
  --tw-backdrop-blur: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-brightness: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-contrast: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-grayscale: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-hue-rotate: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-invert: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-opacity: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-saturate: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-sepia: var(--tw-empty,/*!*/ /*!*/);
  --tw-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

.invisible {
  visibility: hidden;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.top-0 {
  top: 0px;
}

.bottom-\[-40px\] {
  bottom: -40px;
}

.right-10 {
  right: 2.5rem;
}

.top-5 {
  top: 1.25rem;
}

.right-3 {
  right: 0.75rem;
}

.left-0 {
  left: 0px;
}

.top-2 {
  top: 0.5rem;
}

.right-8 {
  right: 2rem;
}

.bottom-1 {
  bottom: 0.25rem;
}

.right-1 {
  right: 0.25rem;
}

.bottom-\[-50px\] {
  bottom: -50px;
}

.bottom-\[-60px\] {
  bottom: -60px;
}

.bottom-\[-70px\] {
  bottom: -70px;
}

.z-20 {
  z-index: 20;
}

.z-30 {
  z-index: 30;
}

.z-50 {
  z-index: 50;
}

.z-10 {
  z-index: 10;
}

.m-auto {
  margin: auto;
}

.mx-1\.5 {
  margin-left: 0.375rem;
  margin-right: 0.375rem;
}

.mx-1 {
  margin-left: 0.25rem;
  margin-right: 0.25rem;
}

.my-12 {
  margin-top: 3rem;
  margin-bottom: 3rem;
}

.mx-4 {
  margin-left: 1rem;
  margin-right: 1rem;
}

.mx-3 {
  margin-left: 0.75rem;
  margin-right: 0.75rem;
}

.my-0 {
  margin-top: 0px;
  margin-bottom: 0px;
}

.my-20 {
  margin-top: 5rem;
  margin-bottom: 5rem;
}

.my-8 {
  margin-top: 2rem;
  margin-bottom: 2rem;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.mt-2 {
  margin-top: 0.5rem;
}

.ml-6 {
  margin-left: 1.5rem;
}

.mt-48 {
  margin-top: 12rem;
}

.mb-6 {
  margin-bottom: 1.5rem;
}

.mt-36 {
  margin-top: 9rem;
}

.mt-20 {
  margin-top: 5rem;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.flex {
  display: flex;
}

.h-\[200\] {
  height: 200;
}

.h-9 {
  height: 2.25rem;
}

.h-1\/4 {
  height: 25%;
}

.h-3\/5 {
  height: 60%;
}

.h-4\/5 {
  height: 80%;
}

.h-2\/5 {
  height: 40%;
}

.h-60 {
  height: 15rem;
}

.h-1 {
  height: 0.25rem;
}

.h-20 {
  height: 5rem;
}

.h-40 {
  height: 10rem;
}

.h-36 {
  height: 9rem;
}

.h-6 {
  height: 1.5rem;
}

.h-80 {
  height: 20rem;
}

.h-1\/3 {
  height: 33.333333%;
}

.h-3 {
  height: 0.75rem;
}

.h-\[500px\] {
  height: 500px;
}

.h-16 {
  height: 4rem;
}

.h-12 {
  height: 3rem;
}

.w-\[350px\] {
  width: 350px;
}

.w-7 {
  width: 1.75rem;
}

.w-1 {
  width: 0.25rem;
}

.w-40 {
  width: 10rem;
}

.w-72 {
  width: 18rem;
}

.w-10\/12 {
  width: 83.333333%;
}

.w-11\/12 {
  width: 91.666667%;
}

.w-full {
  width: 100%;
}

.w-20 {
  width: 5rem;
}

.w-9\/12 {
  width: 75%;
}

.w-96 {
  width: 24rem;
}

.w-10 {
  width: 2.5rem;
}

.w-36 {
  width: 9rem;
}

.w-\[450px\] {
  width: 450px;
}

.w-6 {
  width: 1.5rem;
}

.w-1\/6 {
  width: 16.666667%;
}

.w-3 {
  width: 0.75rem;
}

.w-3\/5 {
  width: 60%;
}

.w-32 {
  width: 8rem;
}

.w-6\/12 {
  width: 50%;
}

.w-24 {
  width: 6rem;
}

.w-52 {
  width: 13rem;
}

.w-56 {
  width: 14rem;
}

.w-9 {
  width: 2.25rem;
}

.w-16 {
  width: 4rem;
}

.w-\[1px\] {
  width: 1px;
}

.w-\[400px\] {
  width: 400px;
}

.w-64 {
  width: 16rem;
}

.w-\[380px\] {
  width: 380px;
}

.min-w-\[288px\] {
  min-width: 288px;
}

.min-w-\[1000px\] {
  min-width: 1000px;
}

.max-w-2xl {
  max-width: 42rem;
}

.flex-shrink {
  flex-shrink: 1;
}

.-translate-x-2\/4 {
  --tw-translate-x: -50%;
  transform: var(--tw-transform);
}

.-translate-x-1\/4 {
  --tw-translate-x: -25%;
  transform: var(--tw-transform);
}

.translate-x-1\/4 {
  --tw-translate-x: 25%;
  transform: var(--tw-transform);
}

.translate-x-2\/4 {
  --tw-translate-x: 50%;
  transform: var(--tw-transform);
}

.rotate-45 {
  --tw-rotate: 45deg;
  transform: var(--tw-transform);
}

.scale-50 {
  --tw-scale-x: .5;
  --tw-scale-y: .5;
  transform: var(--tw-transform);
}

.scale-75 {
  --tw-scale-x: .75;
  --tw-scale-y: .75;
  transform: var(--tw-transform);
}

.transform {
  transform: var(--tw-transform);
}

.cursor-pointer {
  cursor: pointer;
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.justify-evenly {
  justify-content: space-evenly;
}

.space-x-5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1.25rem * var(--tw-space-x-reverse));
  margin-left: calc(1.25rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.25rem * var(--tw-space-y-reverse));
}

.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.75rem * var(--tw-space-x-reverse));
  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}

.self-end {
  align-self: flex-end;
}

.overflow-hidden {
  overflow: hidden;
}

.rounded-3xl {
  border-radius: 1.5rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.rounded-2xl {
  border-radius: 1rem;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.border {
  border-width: 1px;
}

.border-2 {
  border-width: 2px;
}

.border-0 {
  border-width: 0px;
}

.border-b-4 {
  border-bottom-width: 4px;
}

.border-gray-light {
  --tw-border-opacity: 1;
  border-color: rgba(181, 181, 181, var(--tw-border-opacity));
}

.border-white {
  --tw-border-opacity: 1;
  border-color: rgba(255, 255, 255, var(--tw-border-opacity));
}

.border-gray-medium {
  --tw-border-opacity: 1;
  border-color: rgba(150, 150, 150, var(--tw-border-opacity));
}

.border-gray-dark {
  --tw-border-opacity: 1;
  border-color: rgba(123, 123, 123, var(--tw-border-opacity));
}

.border-gray-default {
  --tw-border-opacity: 1;
  border-color: rgba(237, 237, 237, var(--tw-border-opacity));
}

.border-transparent {
  border-color: transparent;
}

.border-orange {
  --tw-border-opacity: 1;
  border-color: rgba(255, 157, 131, var(--tw-border-opacity));
}

.bg-blue-light {
  --tw-bg-opacity: 1;
  background-color: rgba(49, 189, 197, var(--tw-bg-opacity));
}

.bg-blue-defult {
  --tw-bg-opacity: 1;
  background-color: rgba(73, 203, 157, var(--tw-bg-opacity));
}

.bg-green-default {
  --tw-bg-opacity: 1;
  background-color: rgba(115, 227, 86, var(--tw-bg-opacity));
}

.bg-green-light {
  --tw-bg-opacity: 1;
  background-color: rgba(166, 255, 0, var(--tw-bg-opacity));
}

.bg-gray-lightest {
  --tw-bg-opacity: 1;
  background-color: rgba(214, 214, 214, var(--tw-bg-opacity));
}

.bg-orange {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 157, 131, var(--tw-bg-opacity));
}

.bg-black-backdrop {
  --tw-bg-opacity: 1;
  background-color: rgba(56, 56, 56, var(--tw-bg-opacity));
}

.bg-gray-light {
  --tw-bg-opacity: 1;
  background-color: rgba(181, 181, 181, var(--tw-bg-opacity));
}

.bg-gray-dark {
  --tw-bg-opacity: 1;
  background-color: rgba(123, 123, 123, var(--tw-bg-opacity));
}

.bg-opacity-60 {
  --tw-bg-opacity: 0.6;
}

.bg-opacity-80 {
  --tw-bg-opacity: 0.8;
}

.bg-gradient-to-r {
  background-image: linear-gradient(to right, var(--tw-gradient-stops));
}

.from-blue-light {
  --tw-gradient-from: #31BDC5;
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(49, 189, 197, 0));
}

.to-green-light {
  --tw-gradient-to: #A6ff00;
}

.bg-50\% {
  background-size: 50% 50%;
}

.bg-border-bottom-5px {
  background-size: 100% 5px;
}

.bg-center {
  background-position: center;
}

.bg-bottom {
  background-position: bottom;
}

.bg-no-repeat {
  background-repeat: no-repeat;
}

.bg-origin-border {
  background-origin: border-box;
}

.p-2\.5 {
  padding: 0.625rem;
}

.p-2 {
  padding: 0.5rem;
}

.p-3\.5 {
  padding: 0.875rem;
}

.p-3 {
  padding: 0.75rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-10 {
  padding-left: 2.5rem;
  padding-right: 2.5rem;
}

.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.px-\[40px\] {
  padding-left: 40px;
  padding-right: 40px;
}

.py-24 {
  padding-top: 6rem;
  padding-bottom: 6rem;
}

.pt-20 {
  padding-top: 5rem;
}

.pl-5 {
  padding-left: 1.25rem;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.align-bottom {
  vertical-align: bottom;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.font-medium {
  font-weight: 500;
}

.tracking-wider {
  letter-spacing: 0.05em;
}

.text-black-backdrop {
  --tw-text-opacity: 1;
  color: rgba(56, 56, 56, var(--tw-text-opacity));
}

.text-gray-light {
  --tw-text-opacity: 1;
  color: rgba(181, 181, 181, var(--tw-text-opacity));
}

.text-gray-dark {
  --tw-text-opacity: 1;
  color: rgba(123, 123, 123, var(--tw-text-opacity));
}

.text-blue-light {
  --tw-text-opacity: 1;
  color: rgba(49, 189, 197, var(--tw-text-opacity));
}

.text-orange {
  --tw-text-opacity: 1;
  color: rgba(255, 157, 131, var(--tw-text-opacity));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.placeholder-gray-light::-moz-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgba(181, 181, 181, var(--tw-placeholder-opacity));
}

.placeholder-gray-light:-ms-input-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgba(181, 181, 181, var(--tw-placeholder-opacity));
}

.placeholder-gray-light::placeholder {
  --tw-placeholder-opacity: 1;
  color: rgba(181, 181, 181, var(--tw-placeholder-opacity));
}

.placeholder-gray-dark::-moz-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgba(123, 123, 123, var(--tw-placeholder-opacity));
}

.placeholder-gray-dark:-ms-input-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgba(123, 123, 123, var(--tw-placeholder-opacity));
}

.placeholder-gray-dark::placeholder {
  --tw-placeholder-opacity: 1;
  color: rgba(123, 123, 123, var(--tw-placeholder-opacity));
}

.shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-filter);
}

.blur-sm {
  --tw-blur: blur(4px);
  filter: var(--tw-filter);
}

.blur-xs {
  --tw-blur: blur(1px);
  filter: var(--tw-filter);
}

.filter {
  filter: var(--tw-filter);
}

.transition {
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-1000 {
  transition-duration: 1000ms;
}

img, svg {
  display: inline-block;
}

textarea {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus-within\:text-orange:focus-within {
  --tw-text-opacity: 1;
  color: rgba(255, 157, 131, var(--tw-text-opacity));
}

.hover\:-translate-x-0\.5:hover {
  --tw-translate-x: -0.125rem;
  transform: var(--tw-transform);
}

.hover\:-translate-x-0:hover {
  --tw-translate-x: 0px;
  transform: var(--tw-transform);
}

.hover\:translate-x-0\.5:hover {
  --tw-translate-x: 0.125rem;
  transform: var(--tw-transform);
}

.hover\:translate-x-0:hover {
  --tw-translate-x: 0px;
  transform: var(--tw-transform);
}

.hover\:border-gray-light:hover {
  --tw-border-opacity: 1;
  border-color: rgba(181, 181, 181, var(--tw-border-opacity));
}

.hover\:border-green-light:hover {
  --tw-border-opacity: 1;
  border-color: rgba(166, 255, 0, var(--tw-border-opacity));
}

.hover\:border-orange:hover {
  --tw-border-opacity: 1;
  border-color: rgba(255, 157, 131, var(--tw-border-opacity));
}

.hover\:border-white:hover {
  --tw-border-opacity: 1;
  border-color: rgba(255, 255, 255, var(--tw-border-opacity));
}

.hover\:border-blue-light:hover {
  --tw-border-opacity: 1;
  border-color: rgba(49, 189, 197, var(--tw-border-opacity));
}

.hover\:border-opacity-0:hover {
  --tw-border-opacity: 0;
}

.hover\:bg-gray-light:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(181, 181, 181, var(--tw-bg-opacity));
}

.hover\:bg-white:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
}

.hover\:bg-gray-dark:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(123, 123, 123, var(--tw-bg-opacity));
}

.hover\:bg-orange:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 157, 131, var(--tw-bg-opacity));
}

.hover\:bg-blue-light:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(49, 189, 197, var(--tw-bg-opacity));
}

.hover\:text-blue-light:hover {
  --tw-text-opacity: 1;
  color: rgba(49, 189, 197, var(--tw-text-opacity));
}

.hover\:text-white:hover {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.hover\:text-gray-dark:hover {
  --tw-text-opacity: 1;
  color: rgba(123, 123, 123, var(--tw-text-opacity));
}

.hover\:text-green-light:hover {
  --tw-text-opacity: 1;
  color: rgba(166, 255, 0, var(--tw-text-opacity));
}

.hover\:text-orange:hover {
  --tw-text-opacity: 1;
  color: rgba(255, 157, 131, var(--tw-text-opacity));
}

.hover\:underline:hover {
  text-decoration: underline;
}

.focus\:border-orange:focus {
  --tw-border-opacity: 1;
  border-color: rgba(255, 157, 131, var(--tw-border-opacity));
}

.focus\:placeholder-opacity-0:focus::-moz-placeholder {
  --tw-placeholder-opacity: 0;
}

.focus\:placeholder-opacity-0:focus:-ms-input-placeholder {
  --tw-placeholder-opacity: 0;
}

.focus\:placeholder-opacity-0:focus::placeholder {
  --tw-placeholder-opacity: 0;
}

.group:hover .group-hover\:visible {
  visibility: visible;
}
